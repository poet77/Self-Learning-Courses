例一：
C=[0.1211 0.5431 0.6578];
d = 1;
fi{1}=@(x)(exp(x(1))-x(2)-log(1+x(3)));
fi{2}=@(x)indexat((0.2*x-0.3),1); 
fi{3}=@(x)indexat((0.5*x-0.91),2); 
fi{4}=@(x)indexat((x-1),3); 
fi{5}=@(x)indexat((x.^2-1),1); 
fi{6}=@(x)indexat((x.^2-0.87),2); 
fi{7}=@(x)indexat((x-1),3);  

例二：
C = [1.01  1.01 1.001];
d = 1;
fi{1}=@(x)(-2*log(x(1)+1)+3*x(2)^2+x(3)^2);
fi{2}=@(x)indexat((0.99*x-0.11),1); 
fi{3}=@(x)indexat((0.1*x-0.91),2); 
fi{4}=@(x)indexat((x.^2-1),3); 
fi{5}=@(x)indexat((x.^2-1),1); 
fi{6}=@(x)indexat((x.^2-0.87),2); 
fi{7}=@(x)indexat((x-1.1),3);  

例三：
C = [ -1.01  1.01 2];
d = 1;
fi{1} = @(x)(exp(x(1)*6) + exp(x(2)*1) +exp(x(3))- 4); 
fi{2}=@(x)indexat((0.4*x-0.11),1); 
fi{3}=@(x)indexat((0.5*x.^2-0.91),2); 
fi{4}=@(x)indexat((x.^2-1),3); 
fi{5}=@(x)indexat((x.^2-1),1); 
fi{6}=@(x)indexat((x.^2-0.87),2); 
fi{7}=@(x)indexat((x-1),3);  






直接复制到命令行即可，参数可自行修改。下面这段代码是例三的，直接复制运行就可得到结果。

diff_eps = 1e-6;        
stopping_eps = 1e-6;           
alpha =  0.4; 
beta = 0.7;   
x_low = -1*ones(3,1); 
x_high = 1*ones(3,1);
indexat = @(expr, index) expr(index);
C = [ -1.01  1.01 2];
d = 1;
fi{1} = @(x)(exp(x(1)*6) + exp(x(2)*1) +exp(x(3))- 4); 
fi{2}=@(x)indexat((0.4*x-0.11),1); 
fi{3}=@(x)indexat((0.5*x.^2-0.91),2); 
fi{4}=@(x)indexat((x.^2-1),3); 
fi{5}=@(x)indexat((x.^2-1),1); 
fi{6}=@(x)indexat((x.^2-0.87),2); 
fi{7}=@(x)indexat((x-1),3);  
x0_feasible = C\d;
[x_feasible, feasibility] = Firstphase_method(fi, C, x0_feasible, diff_eps, stopping_eps, alpha, beta);
x_feasible=x_feasible(1:size(x_feasible)-1);
[x_s,count] = Newton_method(fi,C,x_feasible, diff_eps, stopping_eps, alpha, beta);




如果安装了CVX，可用如下代码来检验结果

cvx_begin
     variable x(3);
C=[0.1211 0.5431 0.6578];
d = 1;
fi{1}=@(x)(exp(x(1))-x(2)-log(1+x(3)));
fi{2}=@(x)indexat((0.2*x-0.3),1); 
fi{3}=@(x)indexat((0.5*x-0.91),2); 
fi{4}=@(x)indexat((x-1),3); 
fi{5}=@(x)indexat((x.^2-1),1); 
fi{6}=@(x)indexat((x.^2-0.87),2); 
fi{7}=@(x)indexat((x-1),3);  

 
   minimize fi{1}(x);
   subject to
   C*x==d;  %equality constraint
   x_low<=x<=x_high;
   fi{2}(x)<=0;
   fi{3}(x)<=0;
   fi{4}(x)<=0;
   fi{5}(x)<=0;
   fi{6}(x)<=0;
   fi{7}(x)<=0;
   cvx_end
 
fprintf('CVX found optimal value as %d and the solution is \n',fi{1}(x))
disp(x);

























